{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\b\f0\fs22\lang9 MongoDB Lab Assignment Day-1\par
\par

\pard\sa200\sl240\slmult1\b0 MongoDB Exercise in mongo shell\par
Connect to a running mongo instance, use a database named mongo_practice.\par
Document all your queries in a javascript file to use as a reference.\par

\pard\sa200\sl276\slmult1\b query the movies collection to:\par
1.get all documents\par
\b0 >use mongo_practice\par
switched to db mongo_practice\par
> db.movies.find().pretty()\par
\{\par
        "_id" : ObjectId("60505f23e486e39aad19d1b7"),\par
        "title" : "Fight Club",\par
        "writer" : "Chuck Palahniuko",\par
        "year" : 1999,\par
        "actors" : [\par
                "Brad pitt",\par
                "Edward Norton"\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("60505faae486e39aad19d1b8"),\par
        "title" : "Pulp Fiction",\par
        "writer" : "Quentin Tarantino",\par
        "year" : 1994,\par
        "actors" : [\par
                "John Travolta",\par
                "Uma Thurman",\par
                "Samuel L Jackson"\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("6050600de486e39aad19d1b9"),\par
        "title" : "Inglorious Basterds",\par
        "writer" : "Quentin Tarantino",\par
        "year" : 2009,\par
        "actors" : [\par
                "Brad Pitt",\par
                "Diane Kruger",\par
                "Eli Roth"\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("6050608de486e39aad19d1ba"),\par
        "title" : "The Hobbit: and Unexpected Journey",\par
        "writer" : "J.R.R. Tolkein",\par
        "year" : 2012,\par
        "franchise" : "The Hobbit"\par
\}\par
\{\par
        "_id" : ObjectId("605060b4e486e39aad19d1bb"),\par
        "synopsis" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."\par
\}\par
\{\par
        "_id" : ObjectId("6050614de486e39aad19d1bc"),\par
        "title" : "The Hobbit: The Battle of Five Armies",\par
        "writer" : "J.R.R. Tolkein",\par
        "year" : 2012,\par
        "franchise" : "The Hobbit",\par
        "synopsis" : "Bilbo and Company are forced to enagaged in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of rising darkness"\par
\}\par
\{\par
        "_id" : ObjectId("605061d3e486e39aad19d1bd"),\par
        "title" : "Pee Wee Herman's Big Adventure"\par
\}\par
\{ "_id" : ObjectId("60506207e486e39aad19d1be"), "title" : "Avatar" \}\par
\b >\par
2.get all documents with writer set to "Quentin Tarantino"\par
\b0 > db.movies.find(\{writer: "Quentin Tarantino"\}).pretty()\par
\{\par
        "_id" : ObjectId("60505faae486e39aad19d1b8"),\par
        "title" : "Pulp Fiction",\par
        "writer" : "Quentin Tarantino",\par
        "year" : 1994,\par
        "actors" : [\par
                "John Travolta",\par
                "Uma Thurman",\par
                "Samuel L Jackson"\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("6050600de486e39aad19d1b9"),\par
        "title" : "Inglorious Basterds",\par
        "writer" : "Quentin Tarantino",\par
        "year" : 2009,\par
        "actors" : [\par
                "Brad Pitt",\par
                "Diane Kruger",\par
                "Eli Roth"\par
        ]\par
\}\par
>\par
\b 3.get all documents where actors include "Brad Pitt"\b0\par
> db.movies.find(\{actors: "Brad Pitt"\}).pretty()\par
\{\par
        "_id" : ObjectId("6050600de486e39aad19d1b9"),\par
        "title" : "Inglorious Basterds",\par
        "writer" : "Quentin Tarantino",\par
        "year" : 2009,\par
        "actors" : [\par
                "Brad Pitt",\par
                "Diane Kruger",\par
                "Eli Roth"\par
        ]\par
\}\par
>\par
\b 4. get all documents with franchise set to "The Hobbit"\par
\b0 > db.movies.find(\{franchise: "The Hobbit"\}).pretty()\par
\{\par
        "_id" : ObjectId("6050608de486e39aad19d1ba"),\par
        "title" : "The Hobbit: and Unexpected Journey",\par
        "writer" : "J.R.R. Tolkein",\par
        "year" : 2012,\par
        "franchise" : "The Hobbit"\par
\}\par
\{\par
        "_id" : ObjectId("6050614de486e39aad19d1bc"),\par
        "title" : "The Hobbit: The Battle of Five Armies",\par
        "writer" : "J.R.R. Tolkein",\par
        "year" : 2012,\par
        "franchise" : "The Hobbit",\par
        "synopsis" : "Bilbo and Company are forced to enagaged in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of rising darkness"\par
\}\par
>\par
\b 5.get all movies released in the 90s\b0\par
> db.movies.find(\{$and: [\{year: \{$gt: 1900\}\}, \{year: \{$lt: 2000\}\}]\}).pretty()\par
\{\par
        "_id" : ObjectId("60505f23e486e39aad19d1b7"),\par
        "title" : "Fight Club",\par
        "writer" : "Chuck Palahniuko",\par
        "year" : 1999,\par
        "actors" : [\par
                "Brad pitt",\par
                "Edward Norton"\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("60505faae486e39aad19d1b8"),\par
        "title" : "Pulp Fiction",\par
        "writer" : "Quentin Tarantino",\par
        "year" : 1994,\par
        "actors" : [\par
                "John Travolta",\par
                "Uma Thurman",\par
                "Samuel L Jackson"\par
        ]\par
\}\par
>\par
\b 6.get all movies released before the year 2000 or after 2010\b0\par
> db.movies.find(\{$or: [\{year: \{$lt: 2000\}\}, \{year: \{$gt: 2010\}\}]\}).pretty()\par
\{\par
        "_id" : ObjectId("60505f23e486e39aad19d1b7"),\par
        "title" : "Fight Club",\par
        "writer" : "Chuck Palahniuko",\par
        "year" : 1999,\par
        "actors" : [\par
                "Brad pitt",\par
                "Edward Norton"\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("60505faae486e39aad19d1b8"),\par
        "title" : "Pulp Fiction",\par
        "writer" : "Quentin Tarantino",\par
        "year" : 1994,\par
        "actors" : [\par
                "John Travolta",\par
                "Uma Thurman",\par
                "Samuel L Jackson"\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("6050608de486e39aad19d1ba"),\par
        "title" : "The Hobbit: and Unexpected Journey",\par
        "writer" : "J.R.R. Tolkein",\par
        "year" : 2012,\par
        "franchise" : "The Hobbit"\par
\}\par
\{\par
        "_id" : ObjectId("6050614de486e39aad19d1bc"),\par
        "title" : "The Hobbit: The Battle of Five Armies",\par
        "writer" : "J.R.R. Tolkein",\par
        "year" : 2012,\par
        "franchise" : "The Hobbit",\par
        "synopsis" : "Bilbo and Company are forced to enagaged in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of rising darkness"\par
\}\par
>\par
\b UPDATE DOCUMENTS\par
1.add a synopsis to "The Hobbit: An Unexpected Journey" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."\par
\b0 > db.movies.update(\{title: "The Hobbit: An Unexpected Journey"\}, \{synopsis: "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."\})\par
WriteResult(\{ "nMatched" : 0, "nUpserted" : 0, "nModified" : 0 \})\par
\par
\b 2.add a synopsis to "The Hobbit: The Desolation of Smaug" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."\par
\b0 > db.movies.update(\{title: "The Hobbit: The Desolation of Smaug"\}, \{synopsis: "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."\})\par
WriteResult(\{ "nMatched" : 0, "nUpserted" : 0, "nModified" : 0 \})\par
\b 3.add an actor named "Samuel L. Jackson" to the movie "Pulp Fiction"\par
\b0 > db.movies.update(\{title: "Pulp Fiction"\}, \{$push: \{actors: "Samuel L. Jackson"\}\})\par
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\par
\par
\b Text Search:\par
1.1.find all movies that have a synopsis that contains the word "Bilbo"\par
\b0 db.movies.find(\{ synopsis: /Bilbo/g \}).pretty();\par
\b 2.find all movies that have a synopsis that contains the word "Gandalf"\par
\b0 > db.movies.find(\{ synopsis: /Gandalf/g \}).pretty();\par
\b 3.find all movies that have a synopsis that contains the word "Bilbo" and not the word "Gandalf"\par
\b0 > db.movies.find(\{ $and: [\{ synopsis: /Bilbo/g \}, \{ synopsis: \{ $not: /Gandalf/g \} \}] \}).pretty();\b\par
4.find all movies that have a synopsis that contains the word "dwarves" or "hobbit"\b0\par
> db.movies.find(\{ synopsis: /(dwarves|hobbit)/g \}).pretty();\par
\b 5.find all movies that have a synopsis that contains the word "gold" and "dragon"\par
\b0 > db.movies.find(\{ $and: [\{ synopsis: /gold/g \}, \{ synopsis: /dragon/g \}] \}).pretty();\par
\b Delete Documents:\par
1. delete the movie "Pee Wee Herman's Big Adventure"\par
\b0 > db.movies.deleteMany(\{ title: "Pee Wee Herman's Big Adventure" \});\par
\b 2.delete the movie "Avatar"\par
\b0 > db.movies.deleteMany(\{ title: "Avatar" \});\par
\par
\b Relationships:\par
Querying related collections\par
1.find all users\par
\b0 > db.users.find().pretty();\par
\b\par
2.find all posts\par
\b0 > db.posts.find().pretty();\par
\par
\b 3.find all posts that was authored by "GoodGuyGreg"\b0\par
> db.posts.find(\{ username: 'GoodGuyGreg' \}).pretty();\par
\b\par
4.find all posts that was authored by "ScumbagSteve"\par
\b0 > db.posts.find(\{ username: 'ScumbagSteve' \}).pretty();\par
\par
\b 5.find all comments\par
\b0 > db.comments.find().pretty();\par
\par
\b 6.find all comments that was authored by "GoodGuyGreg"\b0\par
> db.comments.find(\{ username: 'GoodGuyGreg' \}).pretty();\par
\par
\b 7.find all comments that was authored by "ScumbagSteve"\par
\b0 > db.comments.find(\{ username: 'ScumbagSteve' \}).pretty();\par
\par
\b 8.find all comments belonging to the post "Reports a bug in your code"\b0\par
> db.posts.aggregate([\par
\{\par
$match: \{ title: 'Reports a bug in your code' \}\par
\},\par
\{\par
$lookup: \{\par
from: 'comments',\par
localField: '_id',\par
foreignField: 'post',\par
as: 'comments'\par
\}\par
\}\par
]).pretty();\b\par
\par
}
 